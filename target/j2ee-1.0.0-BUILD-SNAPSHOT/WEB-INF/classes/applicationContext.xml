<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:s="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <context:property-placeholder location="classpath*:jdbc.properties" />
    <bean name="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    <bean name="persistenceUnitManager"
          class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="persistenceXmlLocations">
            <list>
                <value>classpath*:META-INF/persistence.xml</value>
            </list>
        </property>
        <property name="defaultDataSource" ref="dataSource" />
    </bean>
    <bean name="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitManager" ref="persistenceUnitManager" />
        <property name="persistenceUnitName" value="UP_MM" />
    </bean>
    <bean name="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    <context:annotation-config />
    <s:http>
        <s:intercept-url pattern="/" access="ROLE_DOCTEUR,ROLE_ASSISTANTE" />
        <s:intercept-url pattern="/admin/assistante/**" access="ROLE_DOCTEUR,ROLE_ASSISTANTE" />
        <s:intercept-url pattern="/admin/consultation/**" access="ROLE_DOCTEUR" />
        <s:intercept-url pattern="/admin/docteur/**" access="ROLE_DOCTEUR" />
        <s:intercept-url pattern="/admin/ordonnance/**" access="ROLE_DOCTEUR" />
        <s:intercept-url pattern="/admin/patient/**" access="ROLE_DOCTEUR,ROLE_ASSISTANTE" />
        <s:intercept-url pattern="/admin/rendezvous/**" access="ROLE_DOCTEUR,ROLE_ASSISTANTE" />
        <s:form-login login-page="/login" default-target-url="/"
                      authentication-failure-url="/login" />
        <s:logout logout-url="/logout" logout-success-url="/" invalidate-session="true"
                  delete-cookies="JSESSIONID" />
        <s:access-denied-handler error-page="/403"/>
    </s:http>
    <s:authentication-manager>
        <s:authentication-provider>
            <s:password-encoder hash="md5"></s:password-encoder>
            <s:jdbc-user-service data-source-ref="dataSource"
                                 users-by-username-query=
            "select username,password, enabled from users where username=?"
                                 authorities-by-username-query=
            "select users_username,roles_role from users_roles where users_username=?" />
        </s:authentication-provider>
    </s:authentication-manager>
    <bean name="repository" class="com.epi.j2ee.repository.GenericRepository" />
    <bean name="metier" class="com.epi.j2ee.metier.GenericService">
        <property name="repository" ref="repository" />
    </bean>
</beans>
